// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoE_HEMIS.Data;

namespace MoEHEMIS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191223122713_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.AcademicStaff", b =>
                {
                    b.Property<int?>("AcademicStaffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicLevel");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int?>("CollegeId");

                    b.Property<int>("Ded");

                    b.Property<int>("Employment");

                    b.Property<string>("FieldOfStudy");

                    b.Property<bool>("IsExpatriate");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<int>("Rank");

                    b.Property<decimal>("Salary");

                    b.Property<int>("ServiceYear");

                    b.Property<int>("Sex");

                    b.Property<int>("StaffId");

                    b.Property<int>("TeachingLoad");

                    b.Property<string>("TeachingLoadRemark");

                    b.Property<int?>("departmentId");

                    b.HasKey("AcademicStaffId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("departmentId");

                    b.ToTable("AcademicStaffs");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.AdministrativeStaff", b =>
                {
                    b.Property<int>("AdministrativeStaffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicLevel");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("Ded");

                    b.Property<int>("Employment");

                    b.Property<bool>("IsExpatriate");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<decimal>("Salary");

                    b.Property<int>("ServiceYear");

                    b.Property<int>("Sex");

                    b.Property<int>("StaffId");

                    b.Property<int?>("collegeId");

                    b.HasKey("AdministrativeStaffId");

                    b.HasIndex("collegeId");

                    b.ToTable("AdministrativeStaffs");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<int?>("College");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<int?>("Institution");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<int>("Status");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Band", b =>
                {
                    b.Property<int>("BandId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BandName");

                    b.HasKey("BandId");

                    b.ToTable("Bands");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Additional");

                    b.Property<decimal>("Allocated");

                    b.Property<int>("BudgetDescriptionId");

                    b.Property<int>("BudgetType");

                    b.Property<int?>("CollegeId");

                    b.Property<decimal>("Utilized");

                    b.HasKey("BudgetId");

                    b.HasIndex("BudgetDescriptionId");

                    b.HasIndex("CollegeId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.BudgetDescription", b =>
                {
                    b.Property<int>("BudgetDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BudgetCode");

                    b.Property<string>("Description");

                    b.HasKey("BudgetDescriptionId");

                    b.ToTable("BudgetDescription");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.BuildingData", b =>
                {
                    b.Property<int>("BuildingDataId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BudgetAllocated");

                    b.Property<int?>("CollegeId");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("Date");

                    b.Property<decimal>("FinancialStatus");

                    b.Property<bool>("IsForAdmin");

                    b.Property<bool>("IsForCafetaria");

                    b.Property<bool>("IsForClassRooms");

                    b.Property<bool>("IsForDormitories");

                    b.Property<bool>("IsForLaboratories");

                    b.Property<bool>("IsForLibrary");

                    b.Property<bool>("IsForOtherPurpose");

                    b.Property<bool>("IsForStaffResidence");

                    b.Property<bool>("IsForWorkshop");

                    b.Property<string>("NameOfConsultant");

                    b.Property<string>("NameOfContractor");

                    b.Property<string>("NameOrCodeOfBuilding");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.Property<decimal>("Status");

                    b.HasKey("BuildingDataId");

                    b.HasIndex("CollegeId");

                    b.ToTable("BuildingDatas");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<int>("BandId");

                    b.Property<int?>("InstitutionId");

                    b.Property<string>("Name");

                    b.HasKey("CollegeId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("BandId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("College");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.CompletionRate", b =>
                {
                    b.Property<int>("CompletionRateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<double?>("FifthToSixth");

                    b.Property<double?>("FirstToSecond");

                    b.Property<double?>("FourthToFifth");

                    b.Property<double?>("SecondToThird");

                    b.Property<double?>("SixthToSeventh");

                    b.Property<double?>("ThirdToFourth");

                    b.HasKey("CompletionRateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CompletionRates");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.CostSharingReport", b =>
                {
                    b.Property<int>("CostSharingReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClearanceDate");

                    b.Property<int?>("CollegeId");

                    b.Property<decimal>("DormitoryExpense");

                    b.Property<string>("FieldOfStudy");

                    b.Property<decimal>("FoodExpense");

                    b.Property<string>("FullName");

                    b.Property<decimal>("PrePayment");

                    b.Property<string>("ReciptNumber");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<int>("Sex");

                    b.Property<string>("StudentId");

                    b.Property<string>("TIN");

                    b.Property<decimal>("TutionFee");

                    b.Property<decimal>("Unpaid");

                    b.HasKey("CostSharingReportId");

                    b.HasIndex("CollegeId");

                    b.ToTable("CostSharingReport");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.CostSharingReportFile", b =>
                {
                    b.Property<int>("CostSharingReportFileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollegeId");

                    b.Property<string>("FilePath");

                    b.HasKey("CostSharingReportFileId");

                    b.HasIndex("CollegeId");

                    b.ToTable("CostSharingReportFiles");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId");

                    b.Property<int?>("CollegeId");

                    b.Property<int?>("InstitutionId");

                    b.Property<string>("Name");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.DisabledStudent", b =>
                {
                    b.Property<int>("DisabledStudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Bithdate")
                        .HasColumnType("Date");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Disability");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<int>("Program");

                    b.Property<string>("Remark");

                    b.Property<int>("Sex");

                    b.Property<int>("StudentId");

                    b.Property<string>("StudentInstitutionId");

                    b.HasKey("DisabledStudentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DisabledStudents");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EconomicalDisadvantagedAttrition", b =>
                {
                    b.Property<int>("economicalDisadvantagedAttritionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Case");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Quintal");

                    b.HasKey("economicalDisadvantagedAttritionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EconomicalDisadvantagedAttrition");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EconomicalDisadvantagedEnrollment", b =>
                {
                    b.Property<int>("EconomicalDisadvantagedEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Femals");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Quintile");

                    b.Property<int>("Year");

                    b.HasKey("EconomicalDisadvantagedEnrollmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EconomicalDisadvantagedEnrollment");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EconomicalDisadvantagedGraduate", b =>
                {
                    b.Property<int>("EconomicalDisadvantagedGraduateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Quintile");

                    b.HasKey("EconomicalDisadvantagedGraduateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EconomicalDisadvantagedGraduate");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EmergingRegionAttrition", b =>
                {
                    b.Property<int>("emergingRegionAttritionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Case");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<string>("Region");

                    b.HasKey("emergingRegionAttritionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EmergingRegionAttritions");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EmergingRegionEnrollment", b =>
                {
                    b.Property<int>("EmergingRegionEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Femals");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Region");

                    b.Property<int>("Year");

                    b.HasKey("EmergingRegionEnrollmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EmergingRegionEnrollments");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Femals");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Year");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Enrollments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Enrollment");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EnrollmentByAge", b =>
                {
                    b.Property<int>("EnrollmentByAgeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgeRange");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Males");

                    b.HasKey("EnrollmentByAgeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EnrollmentByAges");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Expatriate", b =>
                {
                    b.Property<int>("ExpatriateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Country");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("FullName");

                    b.Property<string>("Passport");

                    b.Property<string>("Remark");

                    b.Property<int>("Sex");

                    b.Property<string>("StaffId");

                    b.Property<int>("StudyLevel");

                    b.Property<string>("SubjectOfSpecialization");

                    b.HasKey("ExpatriateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Expatriates");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ForeignerStudent", b =>
                {
                    b.Property<int>("ForeignerStudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Bithdate")
                        .HasColumnType("Date");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<string>("Phone");

                    b.Property<int>("Program");

                    b.Property<string>("Remark");

                    b.Property<int>("Sex");

                    b.Property<int>("StudentId");

                    b.Property<string>("StudentInstitutionId");

                    b.Property<int>("YearsInEthiopia");

                    b.HasKey("ForeignerStudentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ForeignerStudents");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Graduate", b =>
                {
                    b.Property<int>("GraduateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("GraduateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Graduates");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.GraduatesTotalExitExamination", b =>
                {
                    b.Property<int>("GraduatesTotalExitExaminationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgeRange");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("Females");

                    b.Property<int>("GeographicalLocation");

                    b.Property<int?>("Males");

                    b.Property<int>("Program");

                    b.HasKey("GraduatesTotalExitExaminationId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("GraduatesTotalExitExamination");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.GraduatesTotalExitExaminationByDisability", b =>
                {
                    b.Property<int>("GraduatesTotalExitExaminationByDisabilityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgeRange");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Disability");

                    b.Property<int?>("Females");

                    b.Property<int>("GeographicalLocation");

                    b.Property<int?>("Males");

                    b.Property<int>("Program");

                    b.HasKey("GraduatesTotalExitExaminationByDisabilityId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("GraduatesTotalExitExaminationByDisability");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.GraduatesTotalExitExaminationByEconomy", b =>
                {
                    b.Property<int>("GraduatesTotalExitExaminationByEconomyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgeRange");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("Females");

                    b.Property<int>("GeographicalLocation");

                    b.Property<int?>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Quintal");

                    b.HasKey("GraduatesTotalExitExaminationByEconomyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("GraduatesTotalExitExaminationByEconomy");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Instance", b =>
                {
                    b.Property<int>("InstanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Semester");

                    b.Property<int>("Year");

                    b.HasKey("InstanceId");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Institution", b =>
                {
                    b.Property<int>("InstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbrivation");

                    b.Property<string>("ApplicationUserId");

                    b.Property<int>("InstanceId");

                    b.Property<string>("Name");

                    b.Property<string>("UserId");

                    b.HasKey("InstitutionId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("InstanceId");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.IntakeCapacity", b =>
                {
                    b.Property<int>("IntakeCapacityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<int>("DepartmentId");

                    b.HasKey("IntakeCapacityId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("IntakeCapacity");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.InternalRevenue", b =>
                {
                    b.Property<int>("InternalRevenueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollegeId");

                    b.Property<decimal>("Expense");

                    b.Property<decimal>("Income");

                    b.Property<int>("Revenue");

                    b.HasKey("InternalRevenueId");

                    b.HasIndex("CollegeId");

                    b.ToTable("InternalRevenues");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Internship", b =>
                {
                    b.Property<int>("InternshipId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<int>("NumberOfIndustriesLinked");

                    b.Property<int?>("NumberOfStudentsOnInternship_2ndYear");

                    b.Property<int?>("NumberOfStudentsOnInternship_3rdYear");

                    b.Property<int?>("NumberOfStudentsOnInternship_4thYear");

                    b.Property<int?>("NumberOfStudentsOnInternship_5thYear");

                    b.Property<int?>("NumberOfStudentsOnInternship_6thYear");

                    b.Property<int?>("NumberOfStudentsOnInternship_7thYear");

                    b.Property<string>("TrainingArea");

                    b.HasKey("InternshipId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Investment", b =>
                {
                    b.Property<int>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollegeId");

                    b.Property<decimal>("CostIncurred");

                    b.Property<int>("InvestmentTitle");

                    b.Property<string>("Remark");

                    b.HasKey("InvestmentId");

                    b.HasIndex("CollegeId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ManagementData", b =>
                {
                    b.Property<int>("ManagementDataId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrentlyAssigned");

                    b.Property<int?>("InstitutionId");

                    b.Property<int>("Level");

                    b.Property<int?>("NumberOfFemales");

                    b.Property<int?>("NumberOfPositionRequired");

                    b.HasKey("ManagementDataId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("ManagementData");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.NewEnrollment", b =>
                {
                    b.Property<int>("NewEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Femals");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Year");

                    b.HasKey("NewEnrollmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("NewEnrollments");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.PastoralRegionEnrollment", b =>
                {
                    b.Property<int>("PastoralRegionEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Femals");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Region");

                    b.Property<int>("Year");

                    b.HasKey("PastoralRegionEnrollmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("PastoralRegionEnrollments");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.PostGraduateResearchPublication", b =>
                {
                    b.Property<int>("PostGraduateResearchPublicationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Publication");

                    b.Property<string>("Title");

                    b.HasKey("PostGraduateResearchPublicationId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("PostGraduateResearchPublication");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ProspectiveGraduate", b =>
                {
                    b.Property<int>("ProspectiveGraduateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("ProspectiveGraduateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ProspectiveGraduates");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ResearchPaper", b =>
                {
                    b.Property<int>("ResearchPaperId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BudgetAllocated");

                    b.Property<int>("BudgetFromExternalFund");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("NumberOfFemaleLeads");

                    b.Property<int>("NumberOfFemaleTeachersFromOtherInstituteParticipated");

                    b.Property<int>("NumberOfFemaleTeachersParticipated");

                    b.Property<int>("NumberOfMaleTeachersFromOtherInstituteParticipated");

                    b.Property<int>("NumberOfMaleTeachersParticipated");

                    b.Property<int>("NumberOfResearchPapersCompleted");

                    b.Property<int>("Status");

                    b.HasKey("ResearchPaperId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ResearchPapers");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.RuralAttrition", b =>
                {
                    b.Property<int>("RuralAttritionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Case");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("RuralAttritionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("RuralAttrition");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.RuralEnrollment", b =>
                {
                    b.Property<int>("RuralEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Femals");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.Property<int>("Year");

                    b.HasKey("RuralEnrollmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("RuralEnrollment");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.RuralGraduate", b =>
                {
                    b.Property<int>("RuralGraduateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("RuralGraduateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("RuralGraduate");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SpecialNeedAttrition", b =>
                {
                    b.Property<int>("specialNeedAttritionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Case");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Disability");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("specialNeedAttritionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SpecialNeedAttrition");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SpecialNeedGraduate", b =>
                {
                    b.Property<int>("SpecialNeedGraduateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("SpecialNeedGraduateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SpecialNeedGraduate");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StaffProgram", b =>
                {
                    b.Property<int>("StaffProgramId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollegeId");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Males");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("StaffProgramId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("StaffPrograms");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StaffPublication", b =>
                {
                    b.Property<int>("StaffPublicationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicStaffId");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Publication");

                    b.Property<string>("Title");

                    b.HasKey("StaffPublicationId");

                    b.HasIndex("AcademicStaffId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("StaffPublication");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StaffTraining", b =>
                {
                    b.Property<int>("StaffTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollegeId");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Males");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("StaffTrainingId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("StaffTrainings");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StudentAttrition", b =>
                {
                    b.Property<int>("StudentAttritionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Case");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Females");

                    b.Property<int>("Level");

                    b.Property<int>("Males");

                    b.Property<int>("Program");

                    b.HasKey("StudentAttritionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("StudentAttritions");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SupportiveStaff", b =>
                {
                    b.Property<int>("SupportiveStaffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicLevel");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("Ded");

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Employment");

                    b.Property<bool>("IsExpatriate");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<decimal>("Salary");

                    b.Property<int>("ServiceYear");

                    b.Property<int>("Sex");

                    b.Property<int>("StaffId");

                    b.Property<int?>("collegeId");

                    b.HasKey("SupportiveStaffId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("collegeId");

                    b.ToTable("SupportiveStaffs");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.TechnicalStaff", b =>
                {
                    b.Property<int>("TechnicalStaffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicLevel");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("Ded");

                    b.Property<int>("Employment");

                    b.Property<bool>("IsExpatriate");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<int>("Rank");

                    b.Property<decimal>("Salary");

                    b.Property<int>("ServiceYear");

                    b.Property<int>("Sex");

                    b.Property<int>("StaffId");

                    b.Property<int?>("departmentId");

                    b.HasKey("TechnicalStaffId");

                    b.HasIndex("departmentId");

                    b.ToTable("TechnicalStaffs");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.UnjustifiableExpense", b =>
                {
                    b.Property<int>("UnjustifiableExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int?>("InstitutionId");

                    b.HasKey("UnjustifiableExpenseId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("UnjustifiableExpense");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SpecialityEnrollment", b =>
                {
                    b.HasBaseType("MoE_HEMIS.Models.Enrollment");

                    b.Property<string>("FieldOfSpecialization");

                    b.ToTable("SpecialityEnrollment");

                    b.HasDiscriminator().HasValue("SpecialityEnrollment");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoE_HEMIS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.AcademicStaff", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College")
                        .WithMany("AcademicStaffs")
                        .HasForeignKey("CollegeId");

                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("departmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.AdministrativeStaff", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("AdministrativeStaffs")
                        .HasForeignKey("collegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Budget", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.BudgetDescription", "BudgetDescription")
                        .WithMany()
                        .HasForeignKey("BudgetDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("Budgets")
                        .HasForeignKey("CollegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.BuildingData", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("BuildingDatas")
                        .HasForeignKey("CollegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.College", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoE_HEMIS.Models.Band", "Band")
                        .WithMany()
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoE_HEMIS.Models.Institution", "Institution")
                        .WithMany("Colleges")
                        .HasForeignKey("InstitutionId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.CompletionRate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("CompletionRates")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.CostSharingReport", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("CostSharingReports")
                        .HasForeignKey("CollegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.CostSharingReportFile", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Department", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("Departments")
                        .HasForeignKey("CollegeId");

                    b.HasOne("MoE_HEMIS.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.DisabledStudent", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EconomicalDisadvantagedAttrition", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EconomicalDisadvantagedEnrollment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EconomicalDisadvantagedGraduate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EmergingRegionAttrition", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EmergingRegionEnrollment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("EmergingRegionEnrollments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Enrollment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("Enrollments")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.EnrollmentByAge", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("EnrollmentByAges")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Expatriate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ForeignerStudent", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Graduate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("Graduates")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.GraduatesTotalExitExamination", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.GraduatesTotalExitExaminationByDisability", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.GraduatesTotalExitExaminationByEconomy", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Institution", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MoE_HEMIS.Models.Instance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.IntakeCapacity", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.InternalRevenue", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("InternalRevenues")
                        .HasForeignKey("CollegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Internship", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("Internships")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.Investment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("Investments")
                        .HasForeignKey("CollegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ManagementData", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Institution", "Institution")
                        .WithMany("MSanagementDatas")
                        .HasForeignKey("InstitutionId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.NewEnrollment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("NewEnrollments")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.PastoralRegionEnrollment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("PastoralRegionEnrollments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.PostGraduateResearchPublication", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ProspectiveGraduate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("ProspectiveGraduates")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.ResearchPaper", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("ResearchPapers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.RuralAttrition", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.RuralEnrollment", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.RuralGraduate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SpecialNeedAttrition", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SpecialNeedGraduate", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StaffProgram", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("StaffPrograms")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StaffPublication", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.AcademicStaff", "AcademicStaff")
                        .WithMany()
                        .HasForeignKey("AcademicStaffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StaffTraining", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany("StaffTrainings")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.StudentAttrition", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("StudentAttritions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoE_HEMIS.Models.SupportiveStaff", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department")
                        .WithMany("SupportiveStaffs")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("MoE_HEMIS.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("collegeId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.TechnicalStaff", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Department", "Department")
                        .WithMany("TechnicalStaffs")
                        .HasForeignKey("departmentId");
                });

            modelBuilder.Entity("MoE_HEMIS.Models.UnjustifiableExpense", b =>
                {
                    b.HasOne("MoE_HEMIS.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId");
                });
#pragma warning restore 612, 618
        }
    }
}
